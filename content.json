{"meta":{"title":"kiddoliu's","subtitle":"","description":"kiddoliu blog","author":"kiddoliu","url":"http://kiddoliu.github.io","root":"/"},"pages":[{"title":"关于","date":"2022-11-26T04:27:05.897Z","updated":"2022-11-26T04:27:05.887Z","comments":false,"path":"about/index.html","permalink":"http://kiddoliu.github.io/about/index.html","excerpt":"","text":"个人详细介绍你好 sdsf"},{"title":"书单","date":"2022-11-08T10:04:19.738Z","updated":"2022-11-08T10:04:19.738Z","comments":false,"path":"books/index.html","permalink":"http://kiddoliu.github.io/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2022-11-08T10:06:05.714Z","updated":"2022-11-08T10:06:05.714Z","comments":false,"path":"categories/index.html","permalink":"http://kiddoliu.github.io/categories/index.html","excerpt":"","text":""},{"title":"imgdemo","date":"2022-11-02T14:24:41.000Z","updated":"2022-11-02T14:24:41.049Z","comments":true,"path":"imgdemo/index.html","permalink":"http://kiddoliu.github.io/imgdemo/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2022-11-08T10:06:39.667Z","updated":"2022-11-08T10:06:39.666Z","comments":true,"path":"links/index.html","permalink":"http://kiddoliu.github.io/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-11-08T10:05:31.500Z","updated":"2022-11-08T10:05:31.500Z","comments":false,"path":"tags/index.html","permalink":"http://kiddoliu.github.io/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2022-11-08T10:07:10.028Z","updated":"2022-11-08T10:07:10.028Z","comments":false,"path":"repository/index.html","permalink":"http://kiddoliu.github.io/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"ideavim配置","slug":"开发环境","date":"2025-05-20T12:31:00.000Z","updated":"2025-05-20T12:40:50.921Z","comments":true,"path":"2025/05/20/开发环境/","link":"","permalink":"http://kiddoliu.github.io/2025/05/20/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/","excerpt":"","text":"ideavim配置相关#“ ~&#x2F;.ideavimrc - IdeaVim 配置模板 “””””””””””””””””””””””””””””””””””””””””””””””””””””””“ 基础设置“””””””””””””””””””””””””””””””””””””””””””””””””””””””set showmatchset hlsearchset incsearchset ignorecaseset smartcaseset history&#x3D;10000set clipboard&#x3D;unnamedplusset noerrorbellsset undolevels&#x3D;10000set sidescroll&#x3D;1set showmodeset listset listchars&#x3D;tab:▸\\ ,trail:·,extends:»,precedes:«,nbsp:×set keep-english-in-normal “ 相对行号（可选，按需开启）“ set relativenumber“ set number “””””””””””””””””””””””””””””””””””””””””””””””””””””””“ 光标和高亮“””””””””””””””””””””””””””””””””””””””””””””””””””””””highlight CursorLine term&#x3D;underline cterm&#x3D;underline guibg&#x3D;Grey10nnoremap n nzznnoremap N Nzz “””””””””””””””””””””””””””””””””””””””””””””””””””””””“ 常用快捷键映射“””””””””””””””””””””””””””””””””””””””””””””””””””””””let mapleader&#x3D;” “ nnoremap Y y$nnoremap D “_d$nnoremap C c$nnoremap d “_dnnoremap gh ^nnoremap gl $nnoremap yl 0v$y “””””””””””””””””””””””””””””””””””””””””””””””””””””””“ 多光标支持（多光标插件）“””””””””””””””””””””””””””””””””””””””””””””””””””””””set multiple-cursorslet g:multi_cursor_use_default_mapping &#x3D; 0let g:multi_cursor_start_word_key &#x3D; ‘‘ “””””””””””””””””””””””””””””””””””””””””””””””””””””””“ Easymotion 设置“””””””””””””””””””””””””””””””””””””””””””””””””””””””set easymotionnmap ss (easymotion-s2) “””””””””””””””””””””””””””””””””””””””””””””””””””””””“ 高亮复制“””””””””””””””””””””””””””””””””””””””””””””””””””””””set highlightedyanklet g:highlightedyank_highlight_duration &#x3D; 2000 “””””””””””””””””””””””””””””””””””””””””””””””””””””””“ Text Object 插件配置“””””””””””””””””””””””””””””””””””””””””””””””””””””””set textobj-entireset argtextobjlet g:argtextobj_pairs &#x3D; “[:],(:),&lt;:&gt;” “””””””””””””””””””””””””””””””””””””””””””””””””””””””“ 注释插件“””””””””””””””””””””””””””””””””””””””””””””””””””””””set commentary “””””””””””””””””””””””””””””””””””””””””””””””””””””””“ 文件树 NERDTree“””””””””””””””””””””””””””””””””””””””””””””””””””””””set NERDTreennoremap gr :NERDTreeFocus “””””””””””””””””””””””””””””””””””””””””””””””””””””””“ IntelliJ IDEA 操作映射“””””””””””””””””””””””””””””””””””””””””””””””””””””””function! FormatAndOptimize() :action OptimizeImports :action ReformatCodeendfunctionnnoremap F :call FormatAndOptimize()nnoremap f :action ReformatCodennoremap r :action RenameElementnnoremap c cnnoremap v vnnoremap h :action ShowIntentionActionsnnoremap q :action QuickFixnnoremap t :action SurroundWithnnoremap c :action CodeCompletionnoremap R :action CopyReferencePopupGroupnoremap n :action RenameFilenoremap pd :action MemberPushDownnoremap pu :action MembersPullUp “””””””””””””””””””””””””””””””””””””””””””””””””””””””“ 显示相关“””””””””””””””””””””””””””””””””””””””””””””””””””””””nnoremap sr :action RecentFilesnnoremap sj :action QuickJavaDocnnoremap su :action ShowUsagesnnoremap so :action FileStructurePopupmap smp (ParameterInfo)nnoremap sb :action ShowBookmarks “””””””””””””””””””””””””””””””””””””””””””””””””””””””“ 跳转相关“””””””””””””””””””””””””””””””””””””””””””””””””””””””nnoremap gj :action JumpToLastChangennoremap gt :action GotoNextHighlightedErrornnoremap ggc gg&#x2F;classnnoremap gi :action GotoImplementationnnoremap gu :action GotoSuperMethodnoremap gd :action GotoDeclarationnnoremap ga :action GotoActionnnoremap gmf :action Forwardnoremap glm :action MethodUpnoremap gnm :action MethodDownnnoremap gb :action Backnmap ge (GotoNextError)map gp (SelectInProjectView)nnoremap gs :action SearchEverywherenoremap gU :action Toolkit.GotoServicenoremap gt :action ActivateTerminalToolWindow “””””””””””””””””””””””””””””””””””””””””””””””””””””””“ 运行相关“””””””””””””””””””””””””””””””””””””””””””””””””””””””nnoremap dr :action ChooseDebugConfigurationnnoremap cb :action ToggleLineBreakpointnnoremap rr :action ChooseRunConfiguration","categories":[{"name":"技术研发","slug":"技术研发","permalink":"http://kiddoliu.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E5%8F%91/"}],"tags":[{"name":"开发效率","slug":"开发效率","permalink":"http://kiddoliu.github.io/tags/%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87/"}],"author":"kiddoliu"},{"title":"Mysql 5.7离线安装","slug":"Mysql-离线安装","date":"2024-04-02T07:47:00.000Z","updated":"2024-04-02T14:11:22.582Z","comments":true,"path":"2024/04/02/Mysql-离线安装/","link":"","permalink":"http://kiddoliu.github.io/2024/04/02/Mysql-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/","excerpt":"","text":"Oracle基本操作(用户,表空间,备份) 下载mysql安装包#下载地址http://mirrors.sohu.com/mysql/MySQL-5.7/mysql-5.7.36-linux-glibc2.12-x86_64.tar 解压安装包#mysql-5.7.36-linux-glibc2.12-x86_64.tar.gz上传到&#x2F;opt&#x2F;下 12345678910111213141516cd /opttar -xvf mysql-5.7.36-linux-glibc2.12-x86_64.tar.gzmv mysql-5.7.36-linux-glibc2.12-x86_64 mysqlln -s mysql-5.7.36-linux-glibc2.12-x86_64/ mysqlgroupadd mysqluseradd -g mysql mysqlcp /etc/my.cnf.bak /etc/my.cnfchmod 775 /etc/my.cnf 修改配置文件#12345678910111213141516171819vi /etc/my.cnf[mysqld]# 配置MySQL的主目录basedir=/opt/mysql/# 配置MySQL的数据目录datadir=/opt/mysql/data/ socket=/tmp/mysql.sockuser=mysqltmpdir=/tmpsymbolic-links=0sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLEScharacter_set_server=utf8[client]default-character-set=utf8[mysqld_safe]# 配置MySQL的错误日志文件路径log-error=/opt/mysql/data/error.log# 配置MySQL的数pid文件路径pid-file=/opt/mysql/mysql.pid 安装配置数据库#123456789101112131415cd /opt/mysqlmkdir data# 将MySQL的主目录的所有权改为mysql用户chown -R mysql:mysql /opt/mysql/cd /opt/mysql/bin/# 编译安装并初始化mysql命令执行完后务必记住数据库管理员临时密码./mysqld --initialize --user=mysql --datadir=/opt/mysql/data --basedir=/opt/mysql# 将mysql/目录下所有文件，所有权都改回root用户cd /opt/mysqlchown -R root .# 将mysql用户只需作为mysql/data/目录下所有文件的所有者chown -R mysql data 制作mysql启动文件#1234567891011121314151617181920212223242526272829303132333435# 拷贝启动文件，并改名为mysqldcp support-files/mysql.server /etc/init.d/mysqld# 设置启动文件的权限chmod 755 /etc/init.d/mysqldcp bin/my_print_defaults /usr/bin/vi /etc/init.d/mysqld# 添加如下代码# 配置MySQL的主目录basedir=/opt/mysql/# 配置MySQL的数据目录datadir=/opt/mysql/data/# 配置MySQL的端口port=3306# 5个位置的/usr/local/mysql全部修改成/opt/mysqlthen basedir=/opt/mysql bindir=/opt/mysql/bin if test -z &quot;$datadir&quot; then datadir=/opt/mysql/data fi sbindir=/opt/mysql/bin libexecdir=/opt/mysql/bin # 配置环境变量文件”/etc/profile“vi /etc/profile# 将MySQL主目录下面的bin目录加入到PATH环境变量export PATH=$PATH:/opt/mysql/bin # 执行设置执行环境变量文件source /etc/profile 启动MySQL服务#12service mysqld startmysql -uroot -p ,输入密码 修改MySQL配置#1234567891011alter user user() identified by &#x27;&#x27;;# 修改密码use mysql;update user set authentication_string=password(&quot;root123&quot;) where user=&quot;root&quot;;# 刷新权限FLUSH PRIVILEGES;# 给root用户开启远程登录权限GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;ht8864488&#x27; WITH GRANT OPTION;FLUSH PRIVILEGES; 修改防火墙配置#1234# 授权3306端口号权限firewall-cmd --zone=public --add-port=3306/tcp --permanent# 重启防火墙，执行命令:firewall-cmd --reload 加入mysql自启动#123456789#增加mysql服务控制脚本执行权限chmod +x /etc/rc.d/init.d/mysqld#将mysqld服务加入到系统服务chkconfig --add mysqldchkconfig --list mysqld# 看服务器MySQL运行状态systemctl status mysql","categories":[{"name":"数据库","slug":"数据库","permalink":"http://kiddoliu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://kiddoliu.github.io/tags/mysql/"}],"author":"kiddoliu"},{"title":"Oracle基本操作(用户,表空间,备份)","slug":"Oracle基本操作","date":"2023-12-23T03:32:00.000Z","updated":"2023-12-23T05:32:42.571Z","comments":true,"path":"2023/12/23/Oracle基本操作/","link":"","permalink":"http://kiddoliu.github.io/2023/12/23/Oracle%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/","excerpt":"","text":"Oracle基本操作(用户,表空间,备份) 用户 表空间 数据备份恢复 用户#概念# oracle中每一个用户对应一个schama，所有的表都归属在相关的用户下 每个用户都对应着自己的默认表空间，该用户建立的表会存储在对应的默认表空间里。 删除用户意味着删除该用户所有的对象，包括表，索引等 具体操作# 新增用户1create user WHHH identified by WHHH account unlock 用户赋权1grant connect ,resource,dba to WHHH; 删除用户以及用户的表1drop user WHHH cascade; 查询属于该用户的表1select table_name from dba_tables where owner = &#x27;YS&#x27;; 表空间#概念# 可以认为表空间就是为了管理这些数据文件，而引入的中间逻辑层，可以表空间上看数据占用的大小，以及有哪些表在这个表空间上，以及具体的所属人员 一个表空间可以包括多个数据文件，数据文件上存储着具体的数据 具体相关操作# 查看数据库有哪些表空间 1select * from Dba_Tablespaces; 创建表空间 1create tablespace LQ_INDEX datafile &#x27;/home/oracle/app/oracle/oradata/helowin/lG08.dbf&#x27; size 100M autoextend on next 200M maxsize 10000M 创建表空间的 LQ_INDEX表空间的数据文件是：home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;oradata&#x2F;helowin&#x2F;lG08.dbf’大小为：100M到达100后自动扩展200M最大为 10000M 查询所有表空间占用数据 12345678910111213141516171819202122232425262728293031select *from (Select a.tablespace_name, (a.bytes - b.bytes) &quot;表空间使用大小(BYTE)&quot;, a.bytes / (1024 * 1024 * 1024) &quot;表空间大小(GB)&quot;, b.bytes / (1024 * 1024 * 1024) &quot;表空间剩余大小(GB)&quot;, (a.bytes - b.bytes) / (1024 * 1024 * 1024) &quot;表空间使用大小(GB)&quot;, to_char((1 - b.bytes / a.bytes) * 100, &#x27;99.99999&#x27;) || &#x27;%&#x27; &quot;使用率&quot; from (select tablespace_name, sum(bytes) bytes from dba_data_files group by tablespace_name) a, (select tablespace_name, sum(bytes) bytes from dba_free_space group by tablespace_name) b where a.tablespace_name = b.tablespace_name union all select c.tablespace_name, d.bytes_used &quot;表空间使用大小(BYTE)&quot;, c.bytes / (1024 * 1024 * 1024) &quot;表空间大小(GB)&quot;, (c.bytes - d.bytes_used) / (1024 * 1024 * 1024) &quot;表空间剩余大小(GB)&quot;, d.bytes_used / (1024 * 1024 * 1024) &quot;表空间使用大小(GB)&quot;, to_char(d.bytes_used * 100 / c.bytes, &#x27;99.99999&#x27;) || &#x27;%&#x27; &quot;使用率&quot; from (select tablespace_name, sum(bytes) bytes from dba_temp_files group by tablespace_name) c, (select tablespace_name, sum(bytes_cached) bytes_used from v$temp_extent_pool group by tablespace_name) d where c.tablespace_name = d.tablespace_name)order by tablespace_name; 查询每个表占用的表空间的大小 123456select *from (select t.tablespace_name, t.owner, t.segment_name, t.segment_type, sum(t.bytes / 1024 / 1024) mb from dba_segments t where t.segment_type = &#x27;TABLE&#x27; group by t.tablespace_name, t.OWNER, t.segment_name, t.segment_type) torder by t.mb desc 查询表空间的数据文件名字以及大小 12345SELECT T.TABLESPACE_NAME,D.FILE_NAME,D.AUTOEXTENSIBLE,D.BYTES,D.MAXBYTES,D.STATUSFROM DBA_TABLESPACES T,DBA_DATA_FILES DWHERE T.TABLESPACE_NAME =D.TABLESPACE_NAMEORDER BY TABLESPACE_NAME,FILE_NAME 查询表空间上有哪些对象 1234567891011121314151617SELECT OWNER AS OWNER , &#x27;TABLE&#x27; AS SEGMENT_TYPE , TABLE_NAME AS SEGMENT_NAMEFROM DBA_TABLESWHERE TABLESPACE_NAME = &#x27;UY_NEW&#x27;UNION ALLSELECT OWNER AS OWNER , &#x27;INDEX&#x27; AS SEGMENT_TYPE , INDEX_NAME AS SEGMETN_NAMEFROM DBA_INDEXESWHERE TABLESPACE_NAME = &#x27;UY_NEW&#x27;UNION ALLSELECT OWNER AS OWNER , &#x27;LOBSEGMENT&#x27; AS SGEMENT_TYPE , SEGMENT_NAME AS SEGMENT_NAMEFROM DBA_LOBSWHERE TABLESPACE_NAME = &#x27;UY_NEW&#x27;; 表空间扩容 方法一：增大所需表空间大小 1alter database datafile &#x27;表空间的文件路径&#x27; resize 改变后的大小 示例： 1alter database datafile &#x27;C:\\ORACLE\\ORADATA\\ORCL\\USERS02.DBF&#x27; resize 3G 方法二： 新增数据文件 123alter tablespace 表空间名add datafile &#x27;存放路径&#x27;size 大小 autoextend on next 50M maxsize unlimited; 示例 123alter tablespace USERSadd datafile &#x27;C:\\ORACLE\\ORADATA\\ORCL\\USERS03.DBF&#x27;size 1024M autoextend on next 50M maxsize unlimited; 修改表空间名称1alter tablespace adf rename to adf_new 数据备份恢复# exp&#x2F;imp1exp SONIC/SONIC BUFFER=64000 FILE=C:\\SONIC.DMP OWNER=SONIC FULL=Y 使用用户名 SONIC使用密码 SONIC导出 SONIC的所有对象 （1）表方式，将指定表的数据导出&#x2F;导入。导出： 导出一张或几张表： 1exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2 导出某张表的部分数据 1exp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1 query=\\”where col1=\\’…\\’ and col2 \\&lt;…\\” 导入一张或几张表 1imp user/pwd file=/dir/xxx.dmp log=xxx.log tables=table1,table2 fromuser=dbuser touser=dbuser2 commit=y ignore=y （2）用户方式，将指定用户的所有对象及数据导出&#x2F;导入。 导出： 1$ exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=(xx,yy) 只导出数据对象，不导出数据 (rows&#x3D;n ) 1exp user/pwd file=/dir/xxx.dmp log=xxx.log owner=user rows=n 导入： 1imp user/pwd file=/dir/xxx.dmp log=xxx.log fromuser=dbuser touser=dbuser2 commit=y ignore=y （3）全库方式，将数据库中的所有对象导出&#x2F;导入导出： 1exp user/pwd file=/dir/xxx.dmp log=xxx.log full=y commit=y ignore=y 导入： 1imp user/pwd file=/dir/xxx.dmp log=xxx.log fromuser=dbuser touser=dbuser2","categories":[{"name":"数据库","slug":"数据库","permalink":"http://kiddoliu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"oracle","slug":"oracle","permalink":"http://kiddoliu.github.io/tags/oracle/"}],"author":"kiddoliu"},{"title":"mongodb基础","slug":"mongodb基础","date":"2022-12-04T03:14:40.000Z","updated":"2023-12-23T04:09:20.429Z","comments":true,"path":"2022/12/04/mongodb基础/","link":"","permalink":"http://kiddoliu.github.io/2022/12/04/mongodb%E5%9F%BA%E7%A1%80/","excerpt":"","text":"mongodb 相关概念 数据库相关操作 mongoDB 创建数据 删除数据库 显示当前数据库 集合相关操作 文档相关操作（表） 相关概念# sql mongo术语 解释&#x2F;说 database database 数据库 tablse collection 数据库表&#x2F;集合 column field 数据记录行&#x2F;文档 index index 索引 table joins 表连接&#x2F;MongoDB不支持 primary key primiry key 主键，MongoDB自动将_id字段设置为主键 启动程序mongod:1, –dbpath &#x2F;&#x2F; 指定数据文件路径 –port &#x2F;&#x2F; 指定端口 连接字符串：mongodb:&#x2F;&#x2F;admin:123456@localhost,localhost:27018,localhost:27019&#x2F;?slaveOk&#x3D;true&#x2F;?slaveOk&#x3D;true 使用用户名：admin 密码：123456 数据库相关操作#mongoDB 创建数据#12use DATABASE_NAME;show dbs; //显示目前的数据库（只有有数据的才会被现实） 删除数据库#必须要进入到数据库中才可以执行 12use 数据库名字db.dropDatabase(); 显示当前数据库#12&gt;dbabc 集合相关操作#12db.createCollection(name, options) 参数说明： name: 要创建的集合名称 options: 可选参数, 指定有关内存大小及索引的选项options 可以是如下参数：、 字段 类型 描述 capped 布尔型 （可选）如果为 true，则创建固定集合。固定集合是指有着固定大小的集合，当达到最大值时，它会自动覆盖最早的文档。 当该值为 true 时，必须指定 size 参数。 autoIndexId 布尔型 3.2后不再支持这个参数 size 数值 （可选）为固定集合指定一个最大值，即字节数。如果 capped 为 true，也需要指定该字段。 max 数值 （可选）指定固定集合中包含文档的最大数量。 创建collections: 1234567891011&gt; use testswitched to db test&gt; db.createCollection(&quot;runoob&quot;)&#123; &quot;ok&quot; : 1 &#125;&gt; show collectionsrunoob&gt; db.createCollection(&quot;mycol&quot;, &#123; capped : true, autoIndexId : true, size : 6142800, max : 10000 &#125; )mycolrunoob MongoDB 删除集合(表) 12345678&gt;use mydbswitched to db mydb&gt;show collectionsmycolmycol2system.indexesrunoob&gt; 文档相关操作（表）# 插入数据 插入一条数据 1234567db.collection.insertMany( [ &lt;document 1&gt; , &lt;document 2&gt;, ... ], &#123; writeConcern: &lt;document&gt;, ordered: &lt;boolean&gt; &#125;) document：要写入的文档。 writeConcern：写入策略，默认为 1，即要求确认写操作，0 是不要求。 ordered：指定是否按顺序写入，默认 true，按顺序写入。 1 插入多条数据","categories":[],"tags":[],"author":"kiddoliu"},{"title":"vim文本对象","slug":"vim文本对象","date":"2022-11-26T03:09:00.000Z","updated":"2023-10-26T09:15:30.459Z","comments":true,"path":"2022/11/26/vim文本对象/","link":"","permalink":"http://kiddoliu.github.io/2022/11/26/vim%E6%96%87%E6%9C%AC%E5%AF%B9%E8%B1%A1/","excerpt":"","text":"什么是vim的文本对象 文本对象都包括那些，都是什么 什么是vim的文本对象# vim文本对象就是你要操作的实体，这个实体可以是一个单词，一个段落，一个程序编码的参数，甚至是整个文章。 例如：w 在vim中代表一个单词，例如 daw d：这里是指delete, a:是指arround, w:这里指单词daw，就是删除当前光标所在字母的单词，a：意思是删除这个单词外加它后边的一个空格This is a big building;如果光标位于big的b上，big[空格] 会被删除后会变成：This is a building; 文本对象都包括那些，都是什么# 文本对象 具体含义 w&#x2F;W word&#x2F;Word:代表一个单词，小写代表单词的分割是特殊符号，大写单词的分隔符是空格例如：cde#abc abc 这里在小写w开来就是两个w，我们把光标定位到c上写一个【daw】 那么只能删除cde,如果我们想删除cde#abc 的时候就要输入【daW】 t tag:整个标签html标签 s sentence:代表一行 p paragraph 代表一个段落，所谓段落就是有空行间隔就叫做一个段落 e entire 代表文章全部,vim默认是没有的，这里需要安装：textobj-entire插件 a arguments:代表一个方法的参数，这里需要安装 argtextobj 插件","categories":[{"name":"学习","slug":"学习","permalink":"http://kiddoliu.github.io/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://kiddoliu.github.io/tags/%E6%8A%80%E6%9C%AF/"},{"name":"vi","slug":"vi","permalink":"http://kiddoliu.github.io/tags/vi/"}],"author":"kiddoliu"},{"title":"ddd","slug":"ddd","date":"2022-11-02T14:28:47.000Z","updated":"2023-10-26T08:59:59.096Z","comments":true,"path":"2022/11/02/ddd/","link":"","permalink":"http://kiddoliu.github.io/2022/11/02/ddd/","excerpt":"","text":"1234class abc&#123; System.out.print &#125;","categories":[],"tags":[]},{"title":"blog-name","slug":"blog-name","date":"2022-11-02T14:27:00.000Z","updated":"2022-11-02T14:27:00.776Z","comments":true,"path":"2022/11/02/blog-name/","link":"","permalink":"http://kiddoliu.github.io/2022/11/02/blog-name/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"categories","slug":"categories","date":"2022-11-02T14:11:08.000Z","updated":"2022-11-02T14:11:08.488Z","comments":true,"path":"2022/11/02/categories/","link":"","permalink":"http://kiddoliu.github.io/2022/11/02/categories/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"cde","slug":"cde","date":"2022-11-02T11:07:29.000Z","updated":"2022-11-02T11:24:24.798Z","comments":true,"path":"2022/11/02/cde/","link":"","permalink":"http://kiddoliu.github.io/2022/11/02/cde/","excerpt":"","text":"你好sadasd sadsad#","categories":[],"tags":[]},{"title":"abc","slug":"abc","date":"2022-11-02T11:04:01.000Z","updated":"2022-11-08T14:04:51.254Z","comments":true,"path":"2022/11/02/abc/","link":"","permalink":"http://kiddoliu.github.io/2022/11/02/abc/","excerpt":"","text":"abc dddf ## abc ### dddf ##### sdfsdf","categories":[{"name":"学习","slug":"学习","permalink":"http://kiddoliu.github.io/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://kiddoliu.github.io/tags/%E6%8A%80%E6%9C%AF/"}]},{"title":"Hello World","slug":"hello-world","date":"2022-11-02T10:51:38.993Z","updated":"2022-11-02T10:51:38.993Z","comments":true,"path":"2022/11/02/hello-world/","link":"","permalink":"http://kiddoliu.github.io/2022/11/02/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start#Create a new post#1$ hexo new &quot;My New Post&quot; More info: Writing Run server#1$ hexo server More info: Server Generate static files#1$ hexo generate More info: Generating Deploy to remote sites#1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"技术研发","slug":"技术研发","permalink":"http://kiddoliu.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E5%8F%91/"},{"name":"数据库","slug":"数据库","permalink":"http://kiddoliu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"学习","slug":"学习","permalink":"http://kiddoliu.github.io/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"开发效率","slug":"开发效率","permalink":"http://kiddoliu.github.io/tags/%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87/"},{"name":"mysql","slug":"mysql","permalink":"http://kiddoliu.github.io/tags/mysql/"},{"name":"oracle","slug":"oracle","permalink":"http://kiddoliu.github.io/tags/oracle/"},{"name":"技术","slug":"技术","permalink":"http://kiddoliu.github.io/tags/%E6%8A%80%E6%9C%AF/"},{"name":"vi","slug":"vi","permalink":"http://kiddoliu.github.io/tags/vi/"}]}